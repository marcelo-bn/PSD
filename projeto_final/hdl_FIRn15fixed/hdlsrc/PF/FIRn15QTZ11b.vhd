-- -------------------------------------------------------------
-- 
-- File Name: /home/aluno/Documentos/PSD/PF/hdl_FIRn15fixed/hdlsrc/PF/FIRn15QTZ11b.vhd
-- Created: 2020-08-11 08:06:43
-- 
-- Generated by MATLAB 8.5 and HDL Coder 3.6
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: FIRn15QTZ11b
-- Source Path: PF/DUT/FIRn15QTZ11b
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY FIRn15QTZ11b IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        Input                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        Output                            :   OUT   std_logic_vector(27 DOWNTO 0)  -- sfix28_En23
        );
END FIRn15QTZ11b;


ARCHITECTURE rtl OF FIRn15QTZ11b IS

  -- Signals
  SIGNAL Input_signed                     : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL BodyDelay2_out1                  : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL BodyDelay3_out1                  : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL BodyDelay4_out1                  : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL BodyDelay5_out1                  : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL BodyDelay6_out1                  : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL BodyDelay7_out1                  : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL BodyDelay8_out1                  : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL BodyDelay9_out1                  : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL BodyDelay10_out1                 : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL BodyDelay11_out1                 : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL BodyDelay12_out1                 : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL BodyDelay13_out1                 : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL BodyDelay14_out1                 : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL BodyDelay15_out1                 : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL b_2_mul_temp                     : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL b_2_out1                         : signed(25 DOWNTO 0);  -- sfix26_En23
  SIGNAL b_15_mul_temp                    : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL b_15_out1                        : signed(25 DOWNTO 0);  -- sfix26_En23
  SIGNAL b_14_mul_temp                    : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL b_14_out1                        : signed(25 DOWNTO 0);  -- sfix26_En23
  SIGNAL b_13_mul_temp                    : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL b_13_out1                        : signed(25 DOWNTO 0);  -- sfix26_En23
  SIGNAL b_12_mul_temp                    : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL b_12_out1                        : signed(25 DOWNTO 0);  -- sfix26_En23
  SIGNAL b_11_mul_temp                    : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL b_11_out1                        : signed(25 DOWNTO 0);  -- sfix26_En23
  SIGNAL b_10_mul_temp                    : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL b_10_out1                        : signed(25 DOWNTO 0);  -- sfix26_En23
  SIGNAL b_9_mul_temp                     : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL b_9_out1                         : signed(25 DOWNTO 0);  -- sfix26_En23
  SIGNAL b_8_mul_temp                     : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL b_8_out1                         : signed(25 DOWNTO 0);  -- sfix26_En23
  SIGNAL b_7_mul_temp                     : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL b_7_out1                         : signed(25 DOWNTO 0);  -- sfix26_En23
  SIGNAL b_6_mul_temp                     : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL b_6_out1                         : signed(25 DOWNTO 0);  -- sfix26_En23
  SIGNAL b_5_mul_temp                     : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL b_5_out1                         : signed(25 DOWNTO 0);  -- sfix26_En23
  SIGNAL b_4_mul_temp                     : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL b_4_out1                         : signed(25 DOWNTO 0);  -- sfix26_En23
  SIGNAL b_3_mul_temp                     : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL b_3_out1                         : signed(25 DOWNTO 0);  -- sfix26_En23
  SIGNAL b_1_mul_temp                     : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL b_1_out1                         : signed(25 DOWNTO 0);  -- sfix26_En23
  SIGNAL BodyLSum2_add_cast               : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum2_add_cast_1             : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum2_out1                   : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum3_add_cast               : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum3_out1                   : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum4_add_cast               : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum4_out1                   : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum5_add_cast               : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum5_out1                   : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum6_add_cast               : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum6_out1                   : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum7_add_cast               : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum7_out1                   : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum8_add_cast               : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum8_out1                   : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum9_add_cast               : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum9_out1                   : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum10_add_cast              : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum10_out1                  : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum11_add_cast              : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum11_out1                  : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum12_add_cast              : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum12_out1                  : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum13_add_cast              : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum13_out1                  : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum14_add_cast              : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum14_out1                  : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum15_add_cast              : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum15_out1                  : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyDelay16_out1                 : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL b_16_mul_temp                    : signed(26 DOWNTO 0);  -- sfix27_En23
  SIGNAL b_16_out1                        : signed(25 DOWNTO 0);  -- sfix26_En23
  SIGNAL BodyLSum16_add_cast              : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BodyLSum16_out1                  : signed(27 DOWNTO 0);  -- sfix28_En23

BEGIN
  Input_signed <= signed(Input);

  BodyDelay2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      BodyDelay2_out1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        BodyDelay2_out1 <= Input_signed;
      END IF;
    END IF;
  END PROCESS BodyDelay2_process;


  BodyDelay3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      BodyDelay3_out1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        BodyDelay3_out1 <= BodyDelay2_out1;
      END IF;
    END IF;
  END PROCESS BodyDelay3_process;


  BodyDelay4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      BodyDelay4_out1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        BodyDelay4_out1 <= BodyDelay3_out1;
      END IF;
    END IF;
  END PROCESS BodyDelay4_process;


  BodyDelay5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      BodyDelay5_out1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        BodyDelay5_out1 <= BodyDelay4_out1;
      END IF;
    END IF;
  END PROCESS BodyDelay5_process;


  BodyDelay6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      BodyDelay6_out1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        BodyDelay6_out1 <= BodyDelay5_out1;
      END IF;
    END IF;
  END PROCESS BodyDelay6_process;


  BodyDelay7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      BodyDelay7_out1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        BodyDelay7_out1 <= BodyDelay6_out1;
      END IF;
    END IF;
  END PROCESS BodyDelay7_process;


  BodyDelay8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      BodyDelay8_out1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        BodyDelay8_out1 <= BodyDelay7_out1;
      END IF;
    END IF;
  END PROCESS BodyDelay8_process;


  BodyDelay9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      BodyDelay9_out1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        BodyDelay9_out1 <= BodyDelay8_out1;
      END IF;
    END IF;
  END PROCESS BodyDelay9_process;


  BodyDelay10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      BodyDelay10_out1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        BodyDelay10_out1 <= BodyDelay9_out1;
      END IF;
    END IF;
  END PROCESS BodyDelay10_process;


  BodyDelay11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      BodyDelay11_out1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        BodyDelay11_out1 <= BodyDelay10_out1;
      END IF;
    END IF;
  END PROCESS BodyDelay11_process;


  BodyDelay12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      BodyDelay12_out1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        BodyDelay12_out1 <= BodyDelay11_out1;
      END IF;
    END IF;
  END PROCESS BodyDelay12_process;


  BodyDelay13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      BodyDelay13_out1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        BodyDelay13_out1 <= BodyDelay12_out1;
      END IF;
    END IF;
  END PROCESS BodyDelay13_process;


  BodyDelay14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      BodyDelay14_out1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        BodyDelay14_out1 <= BodyDelay13_out1;
      END IF;
    END IF;
  END PROCESS BodyDelay14_process;


  BodyDelay15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      BodyDelay15_out1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        BodyDelay15_out1 <= BodyDelay14_out1;
      END IF;
    END IF;
  END PROCESS BodyDelay15_process;


  b_2_mul_temp <= to_signed(-16#078#, 11) * BodyDelay2_out1;
  b_2_out1 <= b_2_mul_temp(25 DOWNTO 0);

  b_15_mul_temp <= to_signed(-16#078#, 11) * BodyDelay15_out1;
  b_15_out1 <= b_15_mul_temp(25 DOWNTO 0);

  b_14_mul_temp <= to_signed(-16#005#, 11) * BodyDelay14_out1;
  b_14_out1 <= b_14_mul_temp(25 DOWNTO 0);

  b_13_mul_temp <= to_signed(-16#00F#, 11) * BodyDelay13_out1;
  b_13_out1 <= b_13_mul_temp(25 DOWNTO 0);

  b_12_mul_temp <= to_signed(16#0CF#, 11) * BodyDelay12_out1;
  b_12_out1 <= b_12_mul_temp(25 DOWNTO 0);

  b_11_mul_temp <= to_signed(16#084#, 11) * BodyDelay11_out1;
  b_11_out1 <= b_11_mul_temp(25 DOWNTO 0);

  b_10_mul_temp <= to_signed(-16#34D#, 11) * BodyDelay10_out1;
  b_10_out1 <= b_10_mul_temp(25 DOWNTO 0);

  b_9_mul_temp <= to_signed(16#235#, 11) * BodyDelay9_out1;
  b_9_out1 <= b_9_mul_temp(25 DOWNTO 0);

  b_8_mul_temp <= to_signed(16#235#, 11) * BodyDelay8_out1;
  b_8_out1 <= b_8_mul_temp(25 DOWNTO 0);

  b_7_mul_temp <= to_signed(-16#34D#, 11) * BodyDelay7_out1;
  b_7_out1 <= b_7_mul_temp(25 DOWNTO 0);

  b_6_mul_temp <= to_signed(16#084#, 11) * BodyDelay6_out1;
  b_6_out1 <= b_6_mul_temp(25 DOWNTO 0);

  b_5_mul_temp <= to_signed(16#0CF#, 11) * BodyDelay5_out1;
  b_5_out1 <= b_5_mul_temp(25 DOWNTO 0);

  b_4_mul_temp <= to_signed(-16#00F#, 11) * BodyDelay4_out1;
  b_4_out1 <= b_4_mul_temp(25 DOWNTO 0);

  b_3_mul_temp <= to_signed(-16#005#, 11) * BodyDelay3_out1;
  b_3_out1 <= b_3_mul_temp(25 DOWNTO 0);

  b_1_mul_temp <= to_signed(16#047#, 11) * Input_signed;
  b_1_out1 <= b_1_mul_temp(25 DOWNTO 0);

  BodyLSum2_add_cast <= resize(b_2_out1, 28);
  BodyLSum2_add_cast_1 <= resize(b_1_out1, 28);
  BodyLSum2_out1 <= BodyLSum2_add_cast + BodyLSum2_add_cast_1;

  BodyLSum3_add_cast <= resize(b_3_out1, 28);
  BodyLSum3_out1 <= BodyLSum3_add_cast + BodyLSum2_out1;

  BodyLSum4_add_cast <= resize(b_4_out1, 28);
  BodyLSum4_out1 <= BodyLSum4_add_cast + BodyLSum3_out1;

  BodyLSum5_add_cast <= resize(b_5_out1, 28);
  BodyLSum5_out1 <= BodyLSum5_add_cast + BodyLSum4_out1;

  BodyLSum6_add_cast <= resize(b_6_out1, 28);
  BodyLSum6_out1 <= BodyLSum6_add_cast + BodyLSum5_out1;

  BodyLSum7_add_cast <= resize(b_7_out1, 28);
  BodyLSum7_out1 <= BodyLSum7_add_cast + BodyLSum6_out1;

  BodyLSum8_add_cast <= resize(b_8_out1, 28);
  BodyLSum8_out1 <= BodyLSum8_add_cast + BodyLSum7_out1;

  BodyLSum9_add_cast <= resize(b_9_out1, 28);
  BodyLSum9_out1 <= BodyLSum9_add_cast + BodyLSum8_out1;

  BodyLSum10_add_cast <= resize(b_10_out1, 28);
  BodyLSum10_out1 <= BodyLSum10_add_cast + BodyLSum9_out1;

  BodyLSum11_add_cast <= resize(b_11_out1, 28);
  BodyLSum11_out1 <= BodyLSum11_add_cast + BodyLSum10_out1;

  BodyLSum12_add_cast <= resize(b_12_out1, 28);
  BodyLSum12_out1 <= BodyLSum12_add_cast + BodyLSum11_out1;

  BodyLSum13_add_cast <= resize(b_13_out1, 28);
  BodyLSum13_out1 <= BodyLSum13_add_cast + BodyLSum12_out1;

  BodyLSum14_add_cast <= resize(b_14_out1, 28);
  BodyLSum14_out1 <= BodyLSum14_add_cast + BodyLSum13_out1;

  BodyLSum15_add_cast <= resize(b_15_out1, 28);
  BodyLSum15_out1 <= BodyLSum15_add_cast + BodyLSum14_out1;

  BodyDelay16_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      BodyDelay16_out1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        BodyDelay16_out1 <= BodyDelay15_out1;
      END IF;
    END IF;
  END PROCESS BodyDelay16_process;


  b_16_mul_temp <= to_signed(16#047#, 11) * BodyDelay16_out1;
  b_16_out1 <= b_16_mul_temp(25 DOWNTO 0);

  BodyLSum16_add_cast <= resize(b_16_out1, 28);
  BodyLSum16_out1 <= BodyLSum15_out1 + BodyLSum16_add_cast;

  Output <= std_logic_vector(BodyLSum16_out1);

END rtl;

